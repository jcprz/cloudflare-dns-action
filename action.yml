name: 'Manage DNS Record'
description: 'Validate, create, update, or delete a DNS record using the Cloudflare API'
inputs:
  auth-token:
    description: 'Cloudflare API token'
    required: true
  zone-id:
    description: 'DNS zone ID'
    required: true
  record-type:
    description: 'Type of the DNS record'
    required: true
  record-name:
    description: 'Name of the DNS record'
    required: true
  record-content:
    description: 'Content of the DNS record'
    required: true
  action:
    description: 'Action to perform on the DNS record'
    required: true
  create-if-not-exists:
    description: 'If true, create the record if it does not exist when validating'
    required: false
    default: 'false'
  ttl:
    description: 'Time to live for DNS record'
    required: false
    default: '1'
  comment:
    description: 'Comment for DNS record'
    required: false
  proxied:
    description: 'If true, DNS record will be proxied through Cloudflare'
    required: false
    default: 'false'
  delete-older-than:
    description: 'If provided, records older than this time in seconds will be deleted'
  delete-regex-match:
    description: 'Delete records that match this regex pattern in record name'
    required: false
  dry-run:
    description: 'If true, prints what would be deleted without actually deleting'
    required: false
    default: 'false'
runs:
  using: "composite"
  steps:
    - run: chmod +x run.sh
      shell: bash
    - run: ./run.sh "${{ inputs.auth-token }}" "${{ inputs.zone-id }}" "${{ inputs.record-type }}" "${{ inputs.record-name }}" "${{ inputs.record-content }}" "${{ inputs.action }}" "${{ inputs.create-if-not-exists }}" "${{ inputs.ttl }}" "${{ inputs.comment }}" "${{ inputs.proxied }}" "${{ inputs.delete-older-than }}" "${{ inputs.delete-regex-match }}" "${{ inputs.dry-run }}"
      shell: bash
